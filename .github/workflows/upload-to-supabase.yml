name: Upload JSON to Supabase Storage

on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'  # Run daily at 10:00 AM UTC
  push:
    branches:
      - main

jobs:
  upload-to-supabase:
    runs-on: ubuntu-latest

    steps:
    - name: Check out this repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Supabase Python SDK
      run: |
        pip install supabase

    - name: Upload JSON to Supabase Storage
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        python - <<EOF
        import os
        from supabase import create_client

        # Initialize Supabase client
        SUPABASE_URL = os.getenv('SUPABASE_URL')
        SUPABASE_KEY = os.getenv('SUPABASE_KEY')
        supabase = create_client(SUPABASE_URL, SUPABASE_KEY)

        # List files in the current directory
        print("Files in current directory:", os.listdir("."))

        # Find the latest JSON file
        json_files = [f for f in os.listdir('.') if f.startswith('github_trending_repos_') and f.endswith('.json')]

        if not json_files:
            print("No JSON files found for upload.")
            exit(1)

        latest_file = sorted(json_files)[-1]
        print(f"Found latest file: {latest_file}")

        # Check if the file already exists in Supabase storage
        try:
            bucket = supabase.storage.from_('github_trending_json')
            file_path = f"trending/{latest_file}"

            # Attempt to delete the file if it exists to avoid "Duplicate" error
            delete_response = bucket.remove([file_path])
            
            # Check if there are any errors in the delete_response (which is a list)
            if isinstance(delete_response, list) and any(item.get('error') for item in delete_response):
                print(f"Warning: Could not delete existing file. Errors: {delete_response}")
            else:
                print(f"File {file_path} deleted successfully or it didn't exist.")

            # Upload the latest JSON file to Supabase Storage
            with open(latest_file, "rb") as file:
                file_data = file.read()
                response = bucket.upload(file_path, file_data)
            
            # Check if the upload was successful using the status_code
            if response.status_code == 200:
                print(f"Successfully uploaded {latest_file} to Supabase Storage.")
            else:
                print(f"Failed to upload {latest_file}. Status Code: {response.status_code}, Message: {response.json()}")
                exit(1)
        except Exception as e:
            print(f"An error occurred while uploading the file: {str(e)}")
            exit(1)
        EOF
